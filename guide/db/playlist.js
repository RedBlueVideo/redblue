//(function () {
//"use strict";

var redblue = {
  /* These functions would be generated by the editing program */
  "custom": {
    userFunc: function () {
      alert("Hello world!");
    }
  },
  "commands": {
    goto: function ( xlinkHref, on ) {
      this.commandName = 'goto';
      
      this["@"] = {
        "xlink:href": xlinkHref,
        "xlink:actuate": xlinkActuate || 'onLoad'
      };

      return this;
    }
  },
  getRandomNumber: function () {
    return Math.random(); // could be random.org API as well
  },
  xhr: function () {
    return new XMLHttpRequest(); // placeholder
  },
  "data": {
    /* Store any variables needed for the playback experience here */
    /*  */
  },
  "playlistActions": {
    "intro": function () {
      redblue.data.randomness = 50; //redblue.getRandomNumber() * 100;
      
      return new redblue.commands.goto( '#red-pill-or-blue-pill', 'durationEnd' );
    },
    "red-pill-or-blue-pill": function () {
      
    },
    "red": function () {
      alert( 'Playlist Action "red" called!' );
    },
    "blue": function () {
      /* If you choose Blue Pill and are lucky, you get the alternate ending. */
      alert( 'Playlist Action "blue" called!' );

      if ( redblue.data.seed >= 50 ) {
        return new redblue.commands.goto( '#easter-egg' );
      }

      return false;
    },
    "wakes-up-to-reality": function () {

    },
    "stays-in-the-matrix": function () {

    },
    "the-end": function () {
      return;
    }
  },
};
//})();